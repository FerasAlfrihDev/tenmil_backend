version: '3.8'

services:
  # Your main Django web application
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_strong_password_here
      - REDIS_DB=0
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    restart: unless-stopped
    # Uses default entrypoint.sh

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass your_strong_password_here
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Celery Worker (same image, different entrypoint)
  celery-worker:
    build: .
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_strong_password_here
      - REDIS_DB=0
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    entrypoint: ["./entrypoint-worker.sh"]
    restart: unless-stopped

  # Celery Beat Scheduler (same image, different entrypoint)
  celery-beat:
    build: .
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_strong_password_here
      - REDIS_DB=0
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    entrypoint: ["./entrypoint-beat.sh"]
    restart: unless-stopped

  # Optional: Flower monitoring
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_strong_password_here
      - REDIS_DB=0
    depends_on:
      - redis
    volumes:
      - .:/app
    command: python -m celery -A configurations flower --broker=redis://:your_strong_password_here@redis:6379/0
    restart: unless-stopped

  # Your existing database service (adjust as needed)
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: your_db_name
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data: 